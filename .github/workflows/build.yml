name: Electron CI Build (unsigned)

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

# すべての run を src/ で実行
defaults:
  run:
    working-directory: src

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            target: mac
            args: --mac
          - os: windows-2022   # 2025/09 以降の移行ノイズ回避で固定
            target: win
            args: --win
          - os: ubuntu-latest
            target: linux
            args: --linux

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          # lockファイルの場所を明示（src/）
          cache-dependency-path: |
            src/package-lock.json
            src/npm-shrinkwrap.json
            src/yarn.lock

      - name: Cache Electron caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('src/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-

      - name: Install deps (ci if lockfile, otherwise install)
        shell: bash
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ] || [ -f yarn.lock ]; then
            echo "Lockfile found → npm ci"
            npm ci
          else
            echo "No lockfile → npm install"
            npm install
          fi

      - name: Build (unsigned)
        run: npx electron-builder ${{ matrix.args }} -p never
        env:
          ELECTRON_CACHE: ~/.cache/electron
          ELECTRON_BUILDER_CACHE: ~/.cache/electron-builder
          CSC_IDENTITY_AUTO_DISCOVERY: "false"
          # 念のため完全に無署名にしたい場合は下記も空に
          # CSC_LINK: ""
          # WIN_CSC_LINK: ""

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-dist
          path: dist/**/*
          if-no-files-found: error

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

